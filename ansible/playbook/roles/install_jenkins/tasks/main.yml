- name: Set config file
  set_fact:
    config_file: /etc/origin/master/master-config.yaml

- name: Update configuration file
  shell: |
    echo "jenkinsPipelineConfig:" >> {{ config_file }}
    echo "  autoProvisionEnabled: false" >> {{ config_file }}

# TODO : Investigate why openshift.service isn't restarted properly using this role while it works whe nwe do that manually -> https://gist.github.com/cmoulliard/cc6f37504e39dc5e1edabdf891b9a0e7
- name: Restart master
  include_role:
      name: restart_master

- name: Wait for master to become ready
  pause:
    seconds: 30

- name: Set namespace
  set_fact:
    namespace: "{{ infra_project }}"

- name: Set Jenkins app name
  set_fact:
    jenkins_app: jenkins-persistent

- name: Delete Jenkins Application, ServiceAccount, RoleBinding, PersistentVolumeClaim
  shell: |
    oc delete all -l app={{ jenkins_app }} -n {{ namespace }}
    oc delete sa jenkins --ignore-not-found=true -n {{ namespace }}
    oc delete rolebindings jenkins_edit --ignore-not-found=true -n {{ namespace }}
    oc delete persistentvolumeclaim jenkins --ignore-not-found=true -n {{ namespace }}

- name: Change scc permission to allow jenkins pod to run within the docker container using its userid
  shell: "oc adm policy add-scc-to-group anyuid system:authenticated -n {{ namespace }}"

- name: Install {{ jenkins_app }}
  shell: "oc new-app JENKINS_PASSWORD=admin123 {{ jenkins_app }} -n {{ namespace }}"

- name: Add role cluster admin to the jenkins service account
  shell: "oc policy add-role-to-user admin system:serviceaccount:{{ namespace }}:jenkins"

- name: Get Jenkins Service Account Token
  shell: |
    oc get sa/jenkins -n {{ namespace }} {% raw %}--template='{{range .secrets}}{{ .name }} {{end}}' | xargs -n 1 oc get secret --template='{{ if .data.token }}{{ .data.token }}{{end}}' {% endraw %} | head -n 1 | base64 -d -
  register: sa_jenkins_token

- name: Print token
  debug:
    msg:
      - "Jenkins ServiceAccount token is"
      - "{{sa_jenkins_token.stdout}}"
