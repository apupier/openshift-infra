- assert:
    that:
      - "openshift_env.config_dir != ''"
    msg: "Unable to determine the Openshift configuration directory -> You are probably running an unsupported Openshift version or in an unsupported environment"

- name: Set master config file
  set_fact:
    config_file: "{{ openshift_env.config_dir }}/master/master-config.yaml"

- name: Generate patch using template
  template:
    src: "templates/jenkins_patch.json.j2"
    dest: /tmp/jenkins_patch.json

- name: Get patch file
  command: cat /tmp/jenkins_patch.json
  register: patch

- name: Patch master-config file
  command: "oc ex config patch {{ openshift_env.config_dir }}/master/master-config.yaml --patch '{{ patch.stdout }}'"
  register: r

- name: Copy patch to new master config file
  copy: content="{{ r.stdout }}" dest={{ openshift_env.config_dir }}/master/master-config.yaml

- name: Restart master
  include_role:
    name: restart_master

- set_fact:
    namespace: "{{ infra_project | default('infra') }}"

- name: Create namespace
  command: "oc new-project {{ namespace }}"
  ignore_errors: true

- name: Set Jenkins app name
  set_fact:
    jenkins_app: jenkins-persistent

- name: Change scc permission to allow jenkins pod to run within the docker container using its userid
  shell: "oc adm policy add-scc-to-group anyuid system:authenticated -n {{ namespace }}"

- name: Install {{ jenkins_app }}
  command: "oc new-app JENKINS_PASSWORD=admin123 {{ jenkins_app }} -n {{ namespace }}"

- name: Add role cluster admin to the jenkins service account
  command: "oc policy add-role-to-user admin system:serviceaccount:{{ namespace }}:jenkins"

- name: Wait until SA becomes available
  pause:
    minutes: 1

- name: Get Jenkins Service Account Token
  command: "oc serviceaccounts get-token jenkins"
  register: sa_jenkins_token

- name: Print token
  debug:
    msg:
      - "Jenkins ServiceAccount token is"
      - "{{sa_jenkins_token.stdout}}"
